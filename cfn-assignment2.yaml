AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Eng:
    Type: String
    Description: 'Group name to be created'
    Default: Engineer
  USERIAMTEST:
    Type: String
    Description: 'Type the user name'
    Default: userIAM
Resources:
  GROUP:
    Type: AWS::IAM::Group
    Properties: 
      GroupName: !Ref Eng
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
  USERFOO:
    Type: AWS::IAM::User
    Properties: 
      Groups: 
        - !Ref GROUP
      LoginProfile: 
        Password: mypassword19QA@
      UserName: foo
  
  FOOKEY:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        !Ref USERFOO
  
  BAAKEY:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        !Ref USERBAA
  
  USERIAMTESTKEY:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        !Ref USERTEST
  
  USERBAA:
    Type: AWS::IAM::User
    Properties: 
      Groups: 
        - !Ref GROUP
      LoginProfile: 
        Password: mypassword19AQ@
      UserName: baa
  USERTEST:
    Type: AWS::IAM::User
    Properties: 
      Groups: 
        - admins 
        - developers
        - !Ref GROUP
      LoginProfile: 
        Password: mypassword19QA@
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      UserName: !Ref USERIAMTEST
Outputs:
  FOOACCESSKEY:
    Value: !Ref FOOKEY
    Description: 'AWS access key Id for user FOO'
  FOOSECRETKEY:
    Value: !GetAtt [FOOKEY, SecretAccessKey]
  
  BAAACCESSKEY:
    Value: !Ref BAAKEY
    Description: 'AWS access key for user BAA'
  BAASECRETKEY:
    Value: !GetAtt [BAAKEY, SecretAccessKey]

  USER3ACCESSKEY:
    Value: !Ref USERIAMTESTKEY
    Description: AWS access key for user USERTEST
  USER3SECRETKEY:
    Value:
      !Join
      - '  '
      - - 'Secret Access Key for: '
        - !Ref USERIAMTEST
        - !GetAtt [USERIAMTESTKEY, SecretAccessKey]
        - 'Account Id'
        - !Ref AWS::AccountId

    